/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xuattendangnhap;

import java.awt.FileDialog;
import java.awt.Frame;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author BUI_QUANG_HIEU
 */
public class NewJFrame extends javax.swing.JFrame {

    List<String> _ListDanhSach = new ArrayList<>();
    List<Integer> _ListSDT = new ArrayList<>();
    XSSFWorkbook _workbook = new XSSFWorkbook();
    Sheet _spreadsheet = _workbook.createSheet("Danh_Sach");
    Row _row = null;
    Cell _cell = null;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        unit();
    }

    private void unit() {
        setLocationRelativeTo(null);
        lbl_title.setHorizontalAlignment(JLabel.CENTER);
        lbl_title.setVerticalAlignment(JLabel.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_title = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bùi Quang Hiếu");
        setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbl_title.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(255, 0, 0));
        lbl_title.setText("Tools Xử lý file Excel By Bùi Quang Hiếu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        jButton2.setText("Định dạng kiểu mã");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Random SĐT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Chèn chuỗi vào cột tùy ý");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Upload File Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Ví dụ: Bùi Quang Hiếu ->hieubq");

        jButton5.setText("Dowload File Excel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton5)
                    .addComponent(jButton4))
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4, jButton5});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String index = JOptionPane.showInputDialog(this, "Mời bạn nhập stt cột muốn xử lý !");
        int row = Integer.parseInt(index);
        FileDialog fd = new FileDialog(new Frame(), "Open File", FileDialog.LOAD);
        fd.setLocationRelativeTo(null);
        fd.setVisible(true); //mở hộp thoại chọn file
        if (fd.getDirectory() != null) {
            String filePath = fd.getDirectory() + fd.getFile();
//            System.out.println(filePath);
            try {
                _ListDanhSach = new ArrayList<>();
                importExcel_CT_SanPham(filePath, row);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Đọc file thất bại !");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        System.out.println(_ListSDT.size());
        String index = JOptionPane.showInputDialog(this, "Mời bạn nhập stt cột mà bạn xuất ra!");
        int row = Integer.parseInt(index);
        exportExcel_Acc(row);
//        System.out.println(_cell.getColumnIndex());
        System.out.println(_spreadsheet.getColumnBreaks());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String input = JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng SĐT muốn random !");
        String count = JOptionPane.showInputDialog(this, "Mời bạn nhập tổng các số có trong 1 SĐT ");
        String firstNum = JOptionPane.showInputDialog(this, "Mời bạn nhập đầu số SĐT muốn random !");
        int inputSDT = Integer.parseInt(input);
//        int countSDT = Integer.parseInt(count);
        _ListSDT = new ArrayList<>();
        for (int i = 0; i < inputSDT; i++) {
            double randomDouble = Math.random();
            randomDouble = randomDouble * 100000000 + 1;
            int randomInt = (int) randomDouble;
            _ListSDT.add(randomInt);
//            System.out.println(" + randomInt);
        }
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            Sheet spreadsheet = workbook.createSheet("Danh_Sach");

            Row row = null;
            Cell cell = null;
//          create Title
            row = spreadsheet.createRow((short) 0);
            row.setHeight((short) 500);

            for (int i = 0; i < _ListSDT.size(); i++) {
                row = spreadsheet.createRow((short) 2 + i);
                row.setHeight((short) 400);

//                row.createCell(0).setCellValue(autoMa(_ListDanhSach.get(i)));
                row.createCell(0).setCellValue(firstNum + _ListSDT.get(i));

            }

            FileDialog fd = new FileDialog(new Frame(), "Save File", FileDialog.SAVE);
            fd.setFile("DanhSachSDT.xlsx");
            fd.setLocationRelativeTo(null);
            fd.setVisible(true); //mở hộp thoại chọn file
            String saveFile = fd.getDirectory();
            File file = new File(saveFile + fd.getFile());
            if (!String.valueOf(file).equalsIgnoreCase("nullnull")) {

                FileOutputStream out = new FileOutputStream(file);
                workbook.write(out);
                out.close();
//        file.createNewFile();
//            System.out.println(file);
//                return "Save thành công";
//                Helper.DialogHelper.alert(this, "Save thành công !");
            } else {
//                Helper.DialogHelper.alert(this, "Save thất bại !");
            }
        } catch (Exception e) {
//            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String input = JOptionPane.showInputDialog(this, "Mời bạn nhập đuôi đằng sau !");
        if (input == null) {
            return;
        }

        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            Sheet spreadsheet = workbook.createSheet("Danh_Sach");

            Row row = null;
            Cell cell = null;
//          create Title
            row = spreadsheet.createRow((short) 0);
            row.setHeight((short) 500);

            for (int i = 0; i < _ListDanhSach.size(); i++) {
                row = spreadsheet.createRow((short) 2 + i);
                row.setHeight((short) 400);

//                row.createCell(0).setCellValue(autoMa(_ListDanhSach.get(i)) + input);
                row.createCell(0).setCellValue(_ListDanhSach.get(i) + input);

            }

            FileDialog fd = new FileDialog(new Frame(), "Save File", FileDialog.SAVE);
            fd.setFile("DanhSachAcc.xlsx");
            fd.setLocationRelativeTo(null);
            fd.setVisible(true); //mở hộp thoại chọn file
            String saveFile = fd.getDirectory();
            File file = new File(saveFile + fd.getFile());
            if (!String.valueOf(file).equalsIgnoreCase("nullnull")) {

                FileOutputStream out = new FileOutputStream(file);
                workbook.write(out);
                out.close();
//        file.createNewFile();
//            System.out.println(file);
//                return "Save thành công";
//                Helper.DialogHelper.alert(this, "Save thành công !");
            } else {
//                Helper.DialogHelper.alert(this, "Save thất bại !");
            }
        } catch (Exception e) {
//            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            FileDialog fd = new FileDialog(new Frame(), "Save File", FileDialog.SAVE);
            fd.setFile("DanhSachAcc.xlsx");
            fd.setLocationRelativeTo(null);
            fd.setVisible(true); //mở hộp thoại chọn file
            String saveFile = fd.getDirectory();
            File file = new File(saveFile + fd.getFile());
            if (!String.valueOf(file).equalsIgnoreCase("nullnull")) {

                FileOutputStream out = new FileOutputStream(file);
                _workbook.write(out);
                out.close();
//        file.createNewFile();
//            System.out.println(file);
//                return "Save thành công";
//                Helper.DialogHelper.alert(this, "Save thành công !");
            } else {
//                Helper.DialogHelper.alert(this, "Save thất bại !");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private static Workbook getWorkbook(InputStream inputStream, String excelFilePath) throws IOException {
        Workbook workbook = null;
        if (excelFilePath.endsWith("xlsx")) {
            workbook = new XSSFWorkbook(inputStream);
        } else if (excelFilePath.endsWith("xls")) {
            workbook = new HSSFWorkbook(inputStream);
        } else {
            throw new IllegalArgumentException("File được chọn không phải Excel file");
        }
        return workbook;
    }

    private void importExcel_CT_SanPham(String excelFilePath, int index) throws IOException {

        // Get file
        InputStream inputStream = new FileInputStream(new File(excelFilePath));
        // Get workbook
        Workbook workbook = getWorkbook(inputStream, excelFilePath);
        // Get sheet
        Sheet sheet = workbook.getSheetAt(0);
        // Get all rows
        Iterator<Row> iterator = sheet.iterator();
        iterator.next();

//        int count = 0; 
//        for (int i = 0; i < 16384; i++) {
        while (iterator.hasNext()) {
            Row nextRow = iterator.next();
            if (nextRow.getRowNum() == 0) {
                // Ignore header
                continue;
            }

            try {

                _ListDanhSach.add(nextRow.getCell(index).getStringCellValue());

//                System.out.println(nextRow.getCell(0).getStringCellValue());
//                JOptionPane.showMessageDialog(this, "Đọc file thành công");
            } catch (Exception e) {
//                JOptionPane.showMessageDialog(this, "Đọc file thất bại");
            }

        }
//        }
        System.out.println(_ListDanhSach.size());
//        
        workbook.close();
        inputStream.close();
//        Helper.DialogHelper.alert(this, count + " Chi tiết sản phẩm thêm thành công !");
//        fillTableChiTietSanPham();
    }

    private void exportExcel_Acc(int row1) {
        try {
            Row row = null;
//          create Title
//            row = _spreadsheet.createRow((short) 0);
//            row.setHeight((short) 500);

            for (int i = 0; i < _ListDanhSach.size(); i++) {
                row = _spreadsheet.createRow((short) 2 + i);
                row.setHeight((short) 400);

                row.createCell(row1).setCellValue(autoMa(_ListDanhSach.get(i)));
//                row.createCell(1).setCellValue(_ListSDT.get(i));

            }

        } catch (Exception e) {
//            e.printStackTrace();
        }
    }

    public static String autoMa(String s) {
        s.trim();
        s = s.toLowerCase();
        String temp1[] = s.split("\\s+");
        s = temp1[temp1.length - 1];
//        System.out.println(temp.length);
//        System.out.println(chuoi);
//        chuoi = ""; // ? ^-^
        for (int i = 0; i < temp1.length - 1; i++) {
            s += String.valueOf(temp1[i].charAt(0));
//            chuoi +=temp[i].charAt(0);
            if (i < temp1.length - 1) {
                s += "";
            }
        }
        String temp = Normalizer.normalize(s, Normalizer.Form.NFD);
        Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
        temp = pattern.matcher(temp).replaceAll("");
        return temp.replaceAll("đ", "d");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbl_title;
    // End of variables declaration//GEN-END:variables
}
